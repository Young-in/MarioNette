model:Model(
  (im_encoder): Encoder(
    (blocks): ModuleList(
      (0): _DownBlock(
        (conv1): PartialConv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (1): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (2): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (3): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
    )
    (heads): ModuleList(
      (0): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (project): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): LayerNorm((128,), eps=1e-05, elementwise_affine=False)
  )
  (encoder_xform): Encoder(
    (blocks): ModuleList(
      (0): _DownBlock(
        (conv1): PartialConv2d(7, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (1): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (2): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (3): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (4): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
    )
    (heads): ModuleList(
      (0): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (probs): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): GroupNorm(8, 128, eps=1e-05, affine=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Linear(in_features=128, out_features=1, bias=True)
    (4): Sigmoid()
  )
  (shifts): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): GroupNorm(8, 128, eps=1e-05, affine=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Linear(in_features=128, out_features=2, bias=True)
    (4): Tanh()
  )
  (learned_dict): Dictionary(
    (decode): Sequential(
      (0): Linear(in_features=128, out_features=1024, bias=True)
      (1): GroupNorm(8, 1024, eps=1e-05, affine=True)
      (2): ReLU(inplace=True)
      (3): Linear(in_features=1024, out_features=1024, bias=True)
      (4): Sigmoid()
    )
  )
  (bg_encoder): Encoder(
    (blocks): ModuleList(
      (0): _DownBlock(
        (conv1): PartialConv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (1): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (2): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (3): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (4): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (5): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
      (6): _DownBlock(
        (conv1): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (conv2): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (norm1): GroupNorm(8, 128, eps=1e-05, affine=True)
        (norm2): GroupNorm(8, 128, eps=1e-05, affine=True)
        (nonlinearity): LeakyReLU(negative_slope=0.01, inplace=True)
      )
    )
    (heads): ModuleList(
      (0): PartialConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
  )
  (bg_x): Sequential(
    (0): Linear(in_features=128, out_features=128, bias=True)
    (1): GroupNorm(8, 128, eps=1e-05, affine=True)
    (2): LeakyReLU(negative_slope=0.01)
    (3): Linear(in_features=128, out_features=385, bias=True)
    (4): Softmax(dim=-1)
  )
)
model_summary:
=================================================================
Layer (type:depth-idx)                   Param #
=================================================================
Model                                    --
├─Encoder: 1-1                           --
│    └─ModuleList: 2-1                   --
│    │    └─_DownBlock: 3-1              151,680
│    │    └─_DownBlock: 3-2              295,680
│    │    └─_DownBlock: 3-3              295,680
│    │    └─_DownBlock: 3-4              295,680
│    └─ModuleList: 2-2                   --
│    │    └─PartialConv2d: 3-5           147,584
│    │    └─PartialConv2d: 3-6           147,584
├─Sequential: 1-2                        --
│    └─Linear: 2-3                       16,512
│    └─LayerNorm: 2-4                    --
├─Encoder: 1-3                           --
│    └─ModuleList: 2-5                   --
│    │    └─_DownBlock: 3-7              156,288
│    │    └─_DownBlock: 3-8              295,680
│    │    └─_DownBlock: 3-9              295,680
│    │    └─_DownBlock: 3-10             295,680
│    │    └─_DownBlock: 3-11             295,680
│    └─ModuleList: 2-6                   --
│    │    └─PartialConv2d: 3-12          147,584
├─Sequential: 1-4                        --
│    └─Linear: 2-7                       16,512
│    └─GroupNorm: 2-8                    256
│    └─LeakyReLU: 2-9                    --
│    └─Linear: 2-10                      129
│    └─Sigmoid: 2-11                     --
├─Sequential: 1-5                        --
│    └─Linear: 2-12                      16,512
│    └─GroupNorm: 2-13                   256
│    └─LeakyReLU: 2-14                   --
│    └─Linear: 2-15                      258
│    └─Tanh: 2-16                        --
├─Dictionary: 1-6                        19,200
│    └─Sequential: 2-17                  --
│    │    └─Linear: 3-13                 132,096
│    │    └─GroupNorm: 3-14              2,048
│    │    └─ReLU: 3-15                   --
│    │    └─Linear: 3-16                 1,049,600
│    │    └─Sigmoid: 3-17                --
├─Encoder: 1-7                           --
│    └─ModuleList: 2-18                  --
│    │    └─_DownBlock: 3-18             151,680
│    │    └─_DownBlock: 3-19             295,680
│    │    └─_DownBlock: 3-20             295,680
│    │    └─_DownBlock: 3-21             295,680
│    │    └─_DownBlock: 3-22             295,680
│    │    └─_DownBlock: 3-23             295,680
│    │    └─_DownBlock: 3-24             295,680
│    └─ModuleList: 2-19                  --
│    │    └─PartialConv2d: 3-25          147,584
├─Sequential: 1-8                        --
│    └─Linear: 2-20                      16,512
│    └─GroupNorm: 2-21                   256
│    └─LeakyReLU: 2-22                   --
│    └─Linear: 2-23                      49,665
│    └─Softmax: 2-24                     --
=================================================================
Total params: 6,213,636
Trainable params: 6,213,636
Non-trainable params: 0
=================================================================
learned_dict:torch.Size([150, 4, 16, 16])
dict_codes:torch.Size([150, 128])
